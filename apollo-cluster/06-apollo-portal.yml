apiVersion: apps/v1
kind: Deployment
metadata:
  name: apollo-portal-deploy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apollo-portal
  template:
    metadata:
      labels:
        app: apollo-portal
    spec:
      containers:
      - name: apollo-portal
        image: apolloconfig/apollo-portal:1.9.1
        ports:
        - containerPort: 8070
          name: httpport
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        env:
          - name: ENV_ENVIRONMENT_TARGET
            valueFrom:
              configMapKeyRef:
                name: system-environment
                key: environment.target
          - name: ENV_CONSUL_HOST
            valueFrom:
              configMapKeyRef:
                name: system-environment
                key: environment.consul_host
          - name: ENV_CONSUL_PORT
            valueFrom:
              configMapKeyRef:
                name: system-environment
                key: environment.consul_port
          - name: ENV_CLUSTER_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-password-secret
                key: rootpassword
        volumeMounts:
        - name: config-volume
          mountPath: /apollo-portal/config
      volumes:
      - name: config-volume
        configMap:
          name: apollo-portal-configmap
---
apiVersion: v1 
kind: Service
metadata:
  name: apollo-portal-svc
  namespace: kube-system
  labels:
    app: apollo-portal-svc 
spec:
  selector:
    app: apollo-portal
  type: NodePort
  ports:
  - name: http
    port: 8070
    targetPort: 8070
    protocol: TCP
    nodePort: 30070
